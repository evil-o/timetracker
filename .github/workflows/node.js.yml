# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Setup ============

    - name: Setup root
      run: npm ci

    - name: Setup app
      working-directory: ./app
      run: npm ci

    - name: Setup Cypress
      working-directory: ./testing
      run: npm ci

    # Testing ==========

    - name: Unit tests
      working-directory: ./app
      run: npm run test:ci

    - name: Cypress tests
      run: npm run e2e

    # Deployment prep ==
    
    - name: Bundle
      run: npm run bundle

    - name: Upload dist folder
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v1
      with:
        name: dist-folder
        path: "./dist/timetracker/browser"

  deploy-to-pages:
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      needs: test-and-build
      
      permissions:
        pages: write
        id-token: write

      environment:
        # environment created automatically by GitHub
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}

      steps:
        - name: Deploy to GitHub Pages
          id: dist-deployment
          uses: actions/deploy-pages@v2
          with:
            artifact_name: dist-folder